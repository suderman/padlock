#!/bin/bash
source "$(cd "$(dirname $(dirname "${BASH_SOURCE[0]}"))" && pwd -P)/bin/config"

if hasnt openssl; then
  msg "Please install openssl, ie: sudo apt-get install openssl"
  exit 1;
fi

if hasnt openvpn; then
  msg "Please install openvpn, ie: sudo apt-get install openvpn"
  exit 1;
fi

if hasnt zip; then
  msg "Please install zip, ie: sudo apt-get install zip"
  exit 1;
fi

# Copy configuration and deref variables
copy "$ROOT/templates/openssl.cnf" "$CA/openssl.cnf"
deref "$CA/openssl.cnf"

# Create directory structure
mkdir -p $CA/root
mkdir -p $CA/db
mkdir -p $CA/certs
mkdir -p $CA/newcerts
mkdir -p $CA/revoked
mkdir -p $CA/crl
mkdir -p $CA/ocsp/requests
mkdir -p $CA/ocsp/responses
mkdir -p $CA/ocsp/text

# Flat file database
has $CA/db/index || touch $CA/db/index
has $CA/db/serial || echo 1000 > $CA/db/serial
has $CA/crl/crlnumber || echo 1000 > $CA/crl/crlnumber

# -------------------------------------------
# CA Certificate
# -------------------------------------------

# Certificate variables
UNIT="Certificate Authority"
NAME="$NAME"
EMAIL="$EMAIL"
SUBJECT="/C=$COUNTRY/ST=$REGION/L=$CITY/O=$ORG/OU=$UNIT/CN=$NAME/emailAddress=$EMAIL/"

# Generate the certificate authority key
if hasnt $CA/root/ca.key; then
  msg "Generate the certificate authority key (ca.key)"
  openssl genrsa -out $CA/root/ca.key 2048 -config $CA/openssl.cnf
  chmod 400 $CA/root/ca.key
fi

# Generate the TLS auth key (ta.key)
if hasnt $CA/root/ta.key; then
  msg "Generate the TLS auth key (ta.key)"
  openvpn --genkey --secret $CA/root/ta.key
  chmod 400 $CA/root/ta.key
fi

# Generate diffie hellman parameters (dh.pem)
if hasnt $CA/root/dh.pem; then
  msg "Generate diffie hellman parameters (dh.pem)"
  # openssl dhparam -out $CA/root/dh.pem 2048
  openssl dhparam -out $CA/root/dh.pem 512
  chmod 400 $CA/root/dh.pem
fi

# Generate the certificate authority certificate
if hasnt $CA/root/ca.crt; then
  msg "Generate the certificate authority certificate (ca.crt)"
  openssl req -new -x509 -nodes -days 3650 -extensions v3_ca  \
    -subj "$SUBJECT"                                          \
    -key $CA/root/ca.key                                      \
    -out $CA/root/ca.crt                                      \
    -config $CA/openssl.cnf
fi

# Save the certificate authority certificate's subject
if hasnt $CA/root/ca.sub; then
  msg "Save the certificate authority certificate's subject (ca.sub)"
  SUBJECT=$(openssl x509 -noout -subject -in $CA/root/ca.crt)
  echo ${SUBJECT##*subject= } > $CA/root/ca.sub
fi


# -------------------------------------------
# OCSP Responder
# -------------------------------------------

# Certificate variables
UNIT="Certificate Authority OCSP"
NAME="$NAME OCSP"
EMAIL="$EMAIL"
SUBJECT="/C=$COUNTRY/ST=$REGION/L=$CITY/O=$ORG/OU=$UNIT/CN=$NAME/emailAddress=$EMAIL/"

# Generate the OCSP key (ocsp.key)
if hasnt $CA/ocsp/ocsp.key; then  
  msg "Generate the OCSP key (ocsp.key)"
  openssl genrsa -out $CA/ocsp/ocsp.key 2048 -config $CA/openssl.cnf
  chmod 400 $CA/ocsp/ocsp.key
fi

# Generate the OCSP certificate signing request (ocsp.csr)
if hasnt $CA/ocsp/ocsp.crt; then
  msg "Generate the OCSP certificate signing request (ocsp.csr)"
  openssl req -new -extensions v3_OCSP                             \
    -subj "$SUBJECT"                                               \
    -key    $CA/ocsp/ocsp.key                                      \
    -out    $CA/ocsp/ocsp.csr                                      \
    -config $CA/openssl.cnf
fi

# Sign the request and create the certificate (ocsp.crt)
if hasnt $CA/ocsp/ocsp.crt; then
  msg "Sign the request and create the certificate (ocsp.crt)"
  yes | openssl ca -notext -md sha256 -days 3650 -extensions v3_OCSP \
    -keyfile $CA/root/ca.key                                         \
    -cert    $CA/root/ca.crt                                         \
    -in      $CA/ocsp/ocsp.csr                                       \
    -out     $CA/ocsp/ocsp.crt                                       \
    -config  $CA/openssl.cnf
  chmod 444  $CA/ocsp/ocsp.crt
  rm -f      $CA/ocsp/ocsp.csr
fi

# Save the OCSP certificate's subject
if hasnt $CA/ocsp/ocsp.sub; then
  msg "Save the OCSP certificate's subject (ocsp.sub)"
  SUBJECT=$(openssl x509 -noout -subject -in $CA/ocsp/ocsp.crt)
  echo ${SUBJECT##*subject= } > $CA/ocsp/ocsp.sub
fi

# -------------------------------------------
# Certificate Revocation List
# -------------------------------------------

# Regenerate the certificate revocation list
msg "Regenerate the certificate revocation list (ca.crl, ca.crl.pem)"
openssl ca -gencrl                         \
  -keyfile $CA/root/ca.key                 \
  -cert    $CA/root/ca.crt                 \
  -out     $CA/crl/ca.crl.pem              \
  -config  $CA/openssl.cnf
openssl crl                                \
  -inform  PEM                             \
  -outform DER                             \
  -in      $CA/crl/ca.crl.pem              \
  -out     $CA/crl/ca.crl
