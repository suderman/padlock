#!/bin/bash
source "$(cd "$(dirname $(dirname "${BASH_SOURCE[0]}"))" && pwd -P)/bin/config"

# Args
FILENAME="$1"
MINUTES_VALID="5"

# Ensure variables exist
if undefined $FILENAME || undefined $MINUTES_VALID; then
  msg "OCSP request missing filename"
  exit 2;
fi

# Ensure request exists on disk
if hasnt "$CA/ocsp/requests/$FILENAME"; then
  msg "OCSP request missing: $CA/ocsp/requests/$FILENAME"
  exit 1;
fi

# Turn request into response
openssl ocsp                              \
  -index $CA/db/index                     \
  -CA $CA/root/ca.crt                     \
  -CAfile $CA/root/ca.crt                 \
  -issuer $CA/root/ca.crt                 \
  -rsigner $CA/ocsp/ocsp.crt              \
  -rkey $CA/ocsp/ocsp.key                 \
  -nmin $MINUTES_VALID                    \
  -reqin "$CA/ocsp/requests/$FILENAME"    \
  -respout "$CA/ocsp/responses/$FILENAME" \
  -text -out "$CA/ocsp/text/$FILENAME"

# If the response doesn't exist, it failed. 
# Delete request and exit
if hasnt "$CA/ocsp/responses/$FILENAME"; then
  /bin/rm -f "$CA/ocsp/requests/$FILENAME"
  exit 1
fi

# Response successful!

# Check if the request has a nonce (can't be cached)
if [ "$(openssl ocsp -req_text -reqin "$CA/ocsp/requests/$FILENAME" | grep "OCSP Nonce")" ]; then

  /bin/rm -f "$CA/ocsp/requests/$FILENAME"
  exit 0

# The request and response IS cacheable
else
  CACHED="$(echo "$FILENAME" | cut -f1 -d"-")-cached"

  # Copy request & response to cache
  if [ "$FILENAME" != "$CACHED" ]; then
    /bin/mv -f "$CA/ocsp/requests/$FILENAME" "$CA/ocsp/requests/$CACHED"
    /bin/cp -f "$CA/ocsp/responses/$FILENAME" "$CA/ocsp/responses/$CACHED"
  fi

  exit 0
fi
